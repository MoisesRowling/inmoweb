/**
 * @file Firestore Security Rules
 * @description This ruleset allows any authenticated user to read and write any data in the Firestore database.
 *
 * Core Philosophy:
 * This ruleset provides open access to all data for any authenticated user.
 *
 * Data Structure:
 * - /users/{userId}: Stores user profile information.
 * - /users/{userId}/investments/{investmentId}: Stores investment information for each user.
 * - /users/{userId}/transactions/{transactionId}: Stores transaction history for each user.
 * - /properties/{propertyId}: Stores information about properties available for investment.
 *
 * Key Security Decisions:
 * - Any authenticated user can create, read, update, and delete any document.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows any authenticated user to read and write user profile data.
     * @path /users/{userId}
     * @allow (create) - Any authenticated user can create a user document.
     * @allow (get) - Any authenticated user can read a user document.
     * @allow (list) - Any authenticated user can list user documents.
     * @allow (update) - Any authenticated user can update a user document.
     * @allow (delete) - Any authenticated user can delete a user document.
     * @deny (none) - No requests are denied, any authenticated user can perform any operation.
     * @principle Allows any authenticated user to perform any operation on user data.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write investment data for a specific user.
     * @path /users/{userId}/investments/{investmentId}
     * @allow (create) - Any authenticated user can create an investment document for any user.
     * @allow (get) - Any authenticated user can read an investment document for any user.
     * @allow (list) - Any authenticated user can list investment documents for any user.
     * @allow (update) - Any authenticated user can update an investment document for any user.
     * @allow (delete) - Any authenticated user can delete an investment document for any user.
     * @deny (none) - No requests are denied, any authenticated user can perform any operation.
     * @principle Allows any authenticated user to perform any operation on investment data.
     */
    match /users/{userId}/investments/{investmentId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write transaction data for a specific user.
     * @path /users/{userId}/transactions/{transactionId}
     * @allow (create) - Any authenticated user can create a transaction document for any user.
     * @allow (get) - Any authenticated user can read a transaction document for any user.
     * @allow (list) - Any authenticated user can list transaction documents for any user.
     * @allow (update) - Any authenticated user can update a transaction document for any user.
     * @allow (delete) - Any authenticated user can delete a transaction document for any user.
     * @deny (none) - No requests are denied, any authenticated user can perform any operation.
     * @principle Allows any authenticated user to perform any operation on transaction data.
     */
    match /users/{userId}/transactions/{transactionId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }

    /**
     * @description Allows any authenticated user to read and write property data.
     * @path /properties/{propertyId}
     * @allow (create) - Any authenticated user can create a property document.
     * @allow (get) - Any authenticated user can read a property document.
     * @allow (list) - Any authenticated user can list property documents.
     * @allow (update) - Any authenticated user can update a property document.
     * @allow (delete) - Any authenticated user can delete a property document.
     * @deny (none) - No requests are denied, any authenticated user can perform any operation.
     * @principle Allows any authenticated user to perform any operation on property data.
     */
    match /properties/{propertyId} {
      allow get, list: if true;
      allow create, update, delete: if isSignedIn();
    }
  }

  function isSignedIn() {
    return request.auth != null;
  }
}