{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the investment platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "saldoTotal": {
          "type": "number",
          "description": "The user's total balance."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    },
    "Property": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Property",
      "type": "object",
      "description": "Represents a property available for investment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the property entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the property."
        },
        "location": {
          "type": "string",
          "description": "Location of the property."
        },
        "type": {
          "type": "string",
          "description": "Type of property (e.g., house, loft)."
        },
        "price": {
          "type": "number",
          "description": "Price of the property."
        },
        "minInvestment": {
          "type": "number",
          "description": "Minimum investment amount for the property."
        },
        "invested": {
          "type": "number",
          "description": "Total amount invested in the property."
        },
        "totalShares": {
          "type": "number",
          "description": "Total shares available for the property."
        },
        "ownedShares": {
          "type": "number",
          "description": "Number of shares owned by a user."
        },
        "image": {
          "type": "string",
          "description": "URL of the property image.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "name",
        "location",
        "type",
        "price",
        "minInvestment"
      ]
    },
    "Investment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Investment",
      "type": "object",
      "description": "Represents an investment made by a user in a property.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the investment entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Investment)"
        },
        "propertyId": {
          "type": "string",
          "description": "Reference to Property. (Relationship: Property 1:N Investment)"
        },
        "amount": {
          "type": "number",
          "description": "Amount invested in the property."
        },
        "date": {
          "type": "string",
          "description": "Date of the investment.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "propertyId",
        "amount",
        "date"
      ]
    },
    "Transaction": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Transaction",
      "type": "object",
      "description": "Represents a financial transaction (deposit, withdrawal, investment).",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the transaction entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Transaction)"
        },
        "type": {
          "type": "string",
          "description": "Type of transaction (deposit, withdraw, investment)."
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transaction."
        },
        "description": {
          "type": "string",
          "description": "Description of the transaction."
        },
        "date": {
          "type": "string",
          "description": "Date of the transaction.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "type",
        "amount",
        "date"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  Each user has their own document keyed by their unique Firebase Auth ID.  Includes denormalized data for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique ID of the user, matching their Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/investments/{investmentId}",
        "definition": {
          "entityName": "Investment",
          "schema": {
            "$ref": "#/backend/entities/Investment"
          },
          "description": "Stores investment information for each user. Each investment document is stored in a subcollection under the user's document, keyed by a unique investment ID. Includes the userId for path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique ID of the user making the investment."
            },
            {
              "name": "investmentId",
              "description": "The unique ID of the investment."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/transactions/{transactionId}",
        "definition": {
          "entityName": "Transaction",
          "schema": {
            "$ref": "#/backend/entities/Transaction"
          },
          "description": "Stores transaction history for each user. Each transaction document is stored in a subcollection under the user's document, keyed by a unique transaction ID. Includes the userId for path-based ownership.",
          "params": [
            {
              "name": "userId",
              "description": "The unique ID of the user associated with the transaction."
            },
            {
              "name": "transactionId",
              "description": "The unique ID of the transaction."
            }
          ]
        }
      },
      {
        "path": "/properties/{propertyId}",
        "definition": {
          "entityName": "Property",
          "schema": {
            "$ref": "#/backend/entities/Property"
          },
          "description": "Stores information about properties available for investment.",
          "params": [
            {
              "name": "propertyId",
              "description": "The unique ID of the property."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore data structure is designed to support the investment platform's core features, including user authentication, property listings, investment tracking, and transaction history. It prioritizes authorization independence, clarity, and scalability.  User data is stored under `/users/{userId}` with subcollections for investments and transactions to ensure data isolation and simplified security rules. Property data is kept in the `/properties` collection. The design denormalizes data where necessary to avoid complex queries and maintain data integrity. This design supports secure `list` operations by segregating user-specific data into user-owned subcollections. Timestamps are stored in each collection to filter and sort by time."
  }
}